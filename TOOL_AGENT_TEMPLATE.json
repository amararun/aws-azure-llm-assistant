{
  "name": "T_AZURE_AWS_MYSQL_M",
  "description": "Execute API call to a based on user question . User question would be converted into a SQL Query and passed as a parameter. Another paramer is the cloud database provide ie azure or aws. See sample API endpoint URL call below.\n\nDatabase server in both cases is MySQL. So make sure that queries are MySQL compliant\n\nIf user refers to 'schema' or 'database' it refers to the following\nin Azure : schema_bankdat\nin AWS : schema_defaults\n\nAll the rest of the schema/databases on the MySQL server are system ones and not relevant\n\nHere's a API end point example for quick reference. Just sample. use all correct values as per javascript function\nhttps://your-endpoint-url.com/sqlquery?sqlquery=SHOW%20TABLES%20FROM%20schema_defaults&cloud=aws\n\nPlease wait for upto 180  seconds for query response to come in as the server can be slow sometimes",
  "color": "linear-gradient(rgb(156,100,101), rgb(66,168,160))",
  "iconSrc": "",
  "schema": "[{\"id\":0,\"property\":\"sqlquery\",\"description\":\"mysql sql query string based on user question\",\"type\":\"string\",\"required\":true},{\"id\":1,\"property\":\"cloudVar\",\"description\":\"either 'aws' or 'azure' based on user question\",\"type\":\"string\",\"required\":false}]",
  "func": "/*\nNOTE FOR TOOL AGENT : Please wait for upto 180  seconds for query response to come in as the server can be slow sometimes\n*/\n\nconst fetch = require('node-fetch');\n\n// Properly encode the query parameters\nconst sqlQuery = encodeURIComponent($sqlquery);\nconst cloudVar = encodeURIComponent($cloudVar);\n\nconst url = `https://your-endpoint-url.com/sqlquery/?sqlquery=${sqlQuery}&cloud=${cloudVar}`;\n\nconst options = {\n    method: 'GET',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n};\n\ntry {\n    const response = await fetch(url, options);\n    const text = await response.text();\n    return text;\n} catch (error) {\n    console.error(error);\n    return '';\n}\n"
}
